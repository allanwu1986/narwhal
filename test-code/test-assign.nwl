Example = {
    a: String
    b: Int
}

List = | {
    next: {
        list: List
        data: Int
    }
    none: None
}

Tree = | {
    none: None
    branches: {
        left: | {
            color: Red
            content: Tree Int
        }
        right: Tree Int
    }
}

#Tree = | {
#    none: None
#    branches: {
#        left: Node
#        right: Node
#    }
#}

#Node = {
#    tree: Tree
#    data: Int
#}

a = 9
b = 38
d = 6.8

square = (a: Double) -> Double {
    return a * a
}

permute = (n: Int, k: Int) -> Int {
    if n < k {
        return -1
    }
    else if n == k {
        return 1
    }
    else {
        return n * permute(n-1, k)
    }
}

c = a + b
e = a + d
f = a+-4*8
g = d*(b - 17)
h = square(g + 9)
i = -6
#j = beer(8 * e)
k = [1,2,3,4]
l = k[8]
m = c.string()
n = Example("eh", 9)
o = 7.permute(4)
p = n.a
#q = n.string()
s = "weew"
t = Tree(9)
u = t.branches
